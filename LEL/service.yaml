name: LEL
title: Linear Error Localization
description: |
  Linear Error Localization
version: 0.1.0
wd: .
input:
  data:
    name: data
    type: url
    description: "url to csv file with data to be checked"
    required: yes
  schema:
    name: metadata
    type: url
    description: |
      url to json table schema with structure of data
    required: no
  rules:
    name: rules
    type: url
    description: 'url to text file with rules to be used in checking'
    required: yes
  weights:
    name: weights
    type: url
    description: weights for variable per row
    required: no
result:
  title: Results of this service
  type: "object"
  properties:
    adapt:
      title: adapt
      type: object
      description: |
        data set that shows for each record of input.data.data which 
        fields are considered erroneous.
      properties:
        data:
          type: string
          description: |
            url to a csv file that is generated by LEL
          mimetype: "text/csv"
          filename: adapt.csv
          value: "{job.url}/result/adapt/data"
        schema: 
          type: string
          description: |
            url to a json table schema file that is generated by LEL
          mimetype: "application/json"
          filename: adapt_schema.json
          value: "{job.url}/result/adapt/schema"
    status:
      title: status
      type: object
      description: |
        data set that shows for each record of input.data.data what the 
        weight and duration of the found solution is.
      properties:
        data:
          type: string
          description: |
            url to a csv file that is generated by LEL
          mimetype: "text/csv"
          filename: status.csv
          value: "{job.url}/result/status/data"
        schema: 
          type: string
          description: |
            url to a json table schema file that is generated by LEL
          mimetype: "application/json"
          filename: status_schema.json
          value: "{job.url}/result/status/schema"
command: >
  Rscript {service.servicedir}/LEL.R
  --adapt=adapt.csv
  --status=status.csv
  {job.input.data.data}
  {job.input.rules}
  {if job.input.data.schema}{job.input.data.schema}{/if}
  {if job.input.weights}{job.input.weights}{/if}
  